name: Build Velix

on:
  push:
    branches: [ main, dev ]
  pull_request:
    branches: [ main, dev ]

jobs:
  build-linux:
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 0

      - name: Verify and Update Submodules
        run: |
          git submodule update --init --recursive
          git submodule status
          ls -la external/

      - name: Install Dependencies
        run: |
          sudo apt update
          sudo apt install -y cmake build-essential libgl1-mesa-dev ninja-build libvulkan-dev vulkan-tools
          sudo apt install -y libwayland-dev wayland-protocols extra-cmake-modules
          sudo apt install -y libx11-dev libxrandr-dev libxinerama-dev libxcursor-dev libxi-dev
          sudo apt install -y libxkbcommon-dev
          sudo apt install -y pkg-config

      - name: Configure and Build
        run: cmake -S . -B build -G Ninja -DCMAKE_BUILD_TYPE=Debug -DVELIX_USE_PHYSX=ON -DPHYSX_BUILD_TYPE=checked && cmake --build build
      
      - name: Install to Staging Dir
        run: |
          mkdir -p build/lib
          cmake --install build --prefix staging/Velix

      - name: Create Archive
        run: |
          tar -czvf Velix-linux.tar.gz -C staging Velix

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Velix-linux
          path: Velix-linux.tar.gz

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 0

      - name: Verify and Update Submodules
        run: |
          git submodule update --init --recursive
          git submodule status

      - name: Install Vulkan SDK
        run: |
          curl -Lo vulkan-sdk.exe https://sdk.lunarg.com/sdk/download/latest/windows/vulkan-sdk.exe
          ./vulkan-sdk.exe --accept-licenses --default-answer --confirm-command install
          $sdkPath = Get-ChildItem "C:\VulkanSDK" -Directory | Select-Object -Last 1 -ExpandProperty FullName
          echo "VULKAN_SDK=$sdkPath" | Out-File -FilePath $env:GITHUB_ENV -Append -Encoding utf8
          echo "VULKAN_SDK is set to: $sdkPath"

      - name: Setup MSVC Developer Environment
        uses: ilammy/msvc-dev-cmd@v1

      - name: Configure and Build
        run: |
          cmake -S . -B build -G Ninja -DVELIX_USE_PHYSX=OFF -DCMAKE_BUILD_TYPE=Debug -DPHYSX_BUILD_TYPE=checked -DVulkan_ROOT="$env:VULKAN_SDK"
          cmake --build build --config Debug

      - name: Install to Staging Dir
        run: |
          cmake --install build --prefix staging/Velix

      - name: Copy Vulkan Runtime DLLs
        run: |
            $vulkanDll = Get-ChildItem -Path $env:VULKAN_SDK -Recurse -Filter "vulkan-1.dll" | Select-Object -First 1
            if ($vulkanDll) {
                Copy-Item $vulkanDll.FullName "staging/Velix/bin/"
                echo "Successfully copied vulkan-1.dll from: $($vulkanDll.FullName)"
            } else {
                echo "ERROR: vulkan-1.dll not found in $env:VULKAN_SDK"

                echo "Trying alternative locations..."
                  
                $alternativePaths = @(
                    "C:\Windows\System32\vulkan-1.dll",
                    "C:\Windows\SysWOW64\vulkan-1.dll"
                )
                
                foreach ($path in $alternativePaths) {
                    if (Test-Path $path) {
                        Copy-Item $path "staging/Velix/bin/"
                        echo "Copied vulkan-1.dll from system location: $path"
                        break
                    }
                }
            }

      - name: Create Archive
        run: |
          tar -czvf Velix-windows.tar.gz -C staging Velix

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Velix-windows
          path: Velix-windows.tar.gz

  build-macos:
    runs-on: macos-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: 'recursive'
          fetch-depth: 0

      - name: Verify and Update Submodules
        run: |
          git submodule update --init --recursive
          git submodule status
          ls -la external/

      - name: Install Dependencies
        run: |
          brew uninstall cmake || true
          brew install cmake ninja freetype glfw

      - name: Install Vulkan SDK
        run: |
          curl -Lo vulkan-sdk.zip https://sdk.lunarg.com/sdk/download/latest/mac/vulkan-sdk.zip
          unzip -q vulkan-sdk.zip -d vulkan-sdk-extracted
          cd vulkan-sdk-extracted
          SDK_APP=$(find . -name "*.app" | head -n 1)
          echo "Found installer: $SDK_APP"

          VERSION_DIR="$HOME/VulkanSDK/1.4.321.0"
          mkdir -p "$VERSION_DIR"

          sudo "$SDK_APP/Contents/MacOS/$(basename "$SDK_APP" .app)" \
            --root "$VERSION_DIR" \
            --accept-licenses --default-answer --confirm-command install \
            com.lunarg.vulkan.core com.lunarg.vulkan.usr com.lunarg.vulkan.volk com.lunarg.vulkan.vma
          
          echo "VULKAN_SDK=$VERSION_DIR/macOS" >> $GITHUB_ENV
          echo "$VERSION_DIR/macOS/bin" >> $GITHUB_PATH

      - name: Configure and Build
        run: |
          cmake -S . -B build -G Ninja -DVELIX_USE_PHYSX=OFF -DVulkan_ROOT="$VULKAN_SDK"
          cmake --build build

      - name: Install to Staging Dir
        run: |
          cmake --install build --prefix staging/Velix

      - name: Copy MoltenVK Runtime Libraries
        run: |
          mkdir -p staging/Velix/lib/
          cp "/usr/local/lib/libMoltenVK.dylib" "staging/Velix/lib/"
          cp "/usr/local/share/vulkan/icd.d/MoltenVK_icd.json" "staging/Velix/lib/"
          cp "/usr/local/lib/libvulkan.dylib" "staging/Velix/lib/" 2>/dev/null || true

      - name: Create Archive
        run: |
          tar -czvf Velix-macos.tar.gz -C staging Velix

      - name: Upload Build Artifact
        uses: actions/upload-artifact@v4
        with:
          name: Velix-macos
          path: Velix-macos.tar.gz